exponentiate = TRUE,
tidy_fun = function(x, ...) broom::tidy(x, ..., p.values = TRUE))
library(MASS)
# Univariate and multivariate analysis of factors associated with parents’ good knowledge
model1 <- polr(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, Hess = T)
summary(model1)
model2 <- glm(Practice_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Knowledge_Score_Percent >= 0 & Knowledge_Score_Percent <= 49 ~ 1, # 1 = Poor
Knowledge_Score_Percent > 49 & Knowledge_Score_Percent <= 79 ~ 2, # 2 = Moderate
Knowledge_Score_Percent > 79 & Knowledge_Score_Percent <= 100 ~ 3  # 3 = Good
))
# Demographic information
df_demographic <- data %>%
select(1:11)
# Load packages
library(tidyverse)
library(stringr)
library(gtsummary)
library(flextable)
library(MASS)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
library(tidyverse)
library(stringr)
library(gtsummary)
library(flextable)
library(MASS)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
View(data)
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Knowledge_Score_Percent >= 0 & Knowledge_Score_Percent <= 49 ~ 1, # 1 = Poor
Knowledge_Score_Percent > 49 & Knowledge_Score_Percent <= 79 ~ 2, # 2 = Moderate
Knowledge_Score_Percent > 79 & Knowledge_Score_Percent <= 100 ~ 3  # 3 = Good
))
install.packages("RColorBrewer")
install.packages("reshape2")
library(tidyverse)
library(likert)
library(ggpubr)
library(ggthemes)
ds <- readxl::read_excel("data/AMR_KAP_No_Code.xlsx")
# Visualize knowledge response
knowledge_df <- ds %>%
select(12:23) %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
# Plot in likert scale
p1 <- plot(likert(knowledge_df), ordered = F, wrap= 60)
p1 + theme_pubr()
# Plot in likert scale
p1 <- plot(likert(knowledge_df), ordered = F)
p1 + theme_pubr()
# Plot in likert scale
p1 <- plot(likert(knowledge_df))
p1 + theme_pubr()
p1 + ggpubr::
# Plot in likert scale
p1 <- plot(likert(knowledge_df))
p1 + theme_pubr()
?likert
# Load packages
library(tidyverse)
library(stringr)
library(gtsummary)
library(flextable)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Knowledge_Score_Percent >= 0 & Knowledge_Score_Percent <= 49 ~ 1, # 1 = Poor
Knowledge_Score_Percent > 49 & Knowledge_Score_Percent <= 79 ~ 2, # 2 = Moderate
Knowledge_Score_Percent > 79 & Knowledge_Score_Percent <= 100 ~ 3  # 3 = Good
))
summary(df_knowledge$Total_Knowledge_Score)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1  # 2 = Good
))
summary(df_knowledge$Knowledge_Level)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 2  # 2 = Good
))
table(df_knowledge$Knowledge_Level)
table(as.factor(df_knowledge$Knowledge_Level))
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score > median(Total_Knowledge_Score) ~ 2  # 2 = Good
))
table(as.factor(df_knowledge$Knowledge_Level))
# Load packages
library(tidyverse)
library(stringr)
library(gtsummary)
library(flextable)
# Load data into R
data <- readxl::read_excel("data/AMR_KAP_Coded.xlsx")
# Demographic information
df_demographic <- data %>%
select(1:11)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score > median(Total_Knowledge_Score) ~ 2  # 2 = Good
))
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score < median(Total_Attitude_Score) ~ 1 # 1 = Negative
Total_Attitude_Score < median(Total_Attitude_Score) ~ 2 # 2 = Positive
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score < median(Total_Attitude_Score) ~ 1, # 1 = Negative
Total_Attitude_Score > median(Total_Attitude_Score) ~ 2 # 2 = Positive
))
View(df_attitude)
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score < median(Total_Attitude_Score) ~ 1, # 1 = Negative
Total_Attitude_Score > median(Total_Attitude_Score) ~ 2 # 2 = Positive
))
View(df_attitude)
median(df_attitude)
median(df_attitude$Total_Attitude_Score)
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score < median(Total_Attitude_Score) ~ 1, # 1 = Negative
Total_Attitude_Score > median(Total_Attitude_Score) ~ 2 # 2 = Positive
))
View(df_attitude)
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score <= median(Total_Attitude_Score) ~ 1, # 1 = Negative
Total_Attitude_Score > median(Total_Attitude_Score) ~ 2 # 2 = Positive
))
View(df_attitude)
View(knowledge_df)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score > median(Total_Knowledge_Score) ~ 2  # 2 = Good
))
View(df_knowledge)
median(df_knowledge$Total_Knowledge_Score)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score < 5 ~ 1, # 1 = Poor
Total_Knowledge_Score > 5 ~ 2  # 2 = Good
))
View(df_knowledge)
# Data pre-processing for knowledge section
df_knowledge <- data %>%
select(12:23) %>%
mutate(Total_Knowledge_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Knowledge_Score_Percent = round((Total_Knowledge_Score/12) * 100,2)) %>%
mutate(Knowledge_Level = case_when(
Total_Knowledge_Score <= median(Total_Knowledge_Score) ~ 1, # 1 = Poor
Total_Knowledge_Score > median(Total_Knowledge_Score) ~ 2  # 2 = Good
))
View(knowledge_df)
View(knowledge_df)
View(df_knowledge)
# Data pre-processing for attitude section
df_attitude <- data %>%
select(24:33) %>%
mutate(Total_Attitude_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Attitude_Score_Percent = round((Total_Attitude_Score/10) * 100,2)) %>%
mutate(Attitude_Level = case_when(
Total_Attitude_Score <= median(Total_Attitude_Score) ~ 1, # 1 = Negative
Total_Attitude_Score > median(Total_Attitude_Score) ~ 2 # 2 = Positive
))
View(df_attitude)
# Data pre-processing for practices section
df_practices <- data %>%
select(34:39) %>%
mutate(Total_Practice_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Practice_Score_Percent = round((Total_Practice_Score/6) * 100,2)) %>%
mutate(Practice_Level = case_when(
Total_Practice_Score <= median(Total_Practice_Score) ~ 1, # 1 = Poor
Total_Practice_Score <= median(Total_Practice_Score) ~ 2 # 2 = Good
))
View(df_practices)
# Data pre-processing for practices section
df_practices <- data %>%
select(34:39) %>%
mutate(Total_Practice_Score = rowSums(across(where(is.numeric)))) %>%
mutate(Practice_Score_Percent = round((Total_Practice_Score/6) * 100,2)) %>%
mutate(Practice_Level = case_when(
Total_Practice_Score <= median(Total_Practice_Score) ~ 1, # 1 = Poor
Total_Practice_Score > median(Total_Practice_Score) ~ 2 # 2 = Good
))
View(df_practices)
# Sources of information
df_source_of_info <- data %>%
select(41:49) %>%
mutate(Others = `Others...49`)
# Reasons for self-medication
df_self_medication_reasons <- data %>%
select(51:62) %>%
mutate(Others = `Others...62`)
# Combined data
processed_df <- cbind(df_demographic, df_knowledge, df_attitude, df_practices, df_source_of_info, df_self_medication_reasons)
# Encoding Data
processed_df$Knowledge_Level <- as.factor(processed_df$Knowledge_Level)
processed_df$Attitude_Level <- as.factor(processed_df$Attitude_Level)
processed_df$Practice_Level <- as.factor(processed_df$Practice_Level)
processed_df$`Parent’s age (years)` <- as.factor(processed_df$`Parent’s age (years)`)
processed_df$`Parent’s sex` <- as.factor(processed_df$`Parent’s sex`)
processed_df$`Parent’s education level` <- as.factor(processed_df$`Parent’s education level`)
processed_df$`Employment status` <- as.factor(processed_df$`Employment status`)
processed_df$`Family type` <- as.factor(processed_df$`Family type`)
processed_df$`Your average household income per month (BDT)` <- as.factor(processed_df$`Your average household income per month (BDT)`)
processed_df$`Number of children` <- as.factor(processed_df$`Number of children`)
model2 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df)
glimpse(processed_df)
# Combined data
processed_df <- cbind(df_demographic, df_knowledge, df_attitude, df_practices, df_source_of_info, df_self_medication_reasons)
# write_excel_csv(processed_df, file = "data/AMR_Processed_Data.csv")
glimpse(processed_df)
# Factors associated with better knowledge of the uses of antibiotics
model2 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df)
summary(model2)
summary(model1)
# Factors associated with better knowledge of the uses of antibiotics
model1 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df)
model1 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, family = binomial)
processed_df$Knowledge_Level <- as.factor(processed_df$Knowledge_Level)
processed_df$Attitude_Level <- as.factor(processed_df$Attitude_Level)
processed_df$Practice_Level <- as.factor(processed_df$Practice_Level)
processed_df$`Parent’s age (years)` <- as.factor(processed_df$`Parent’s age (years)`)
processed_df$`Parent’s sex` <- as.factor(processed_df$`Parent’s sex`)
processed_df$`Parent’s education level` <- as.factor(processed_df$`Parent’s education level`)
processed_df$`Employment status` <- as.factor(processed_df$`Employment status`)
processed_df$`Family type` <- as.factor(processed_df$`Family type`)
processed_df$`Your average household income per month (BDT)` <- as.factor(processed_df$`Your average household income per month (BDT)`)
processed_df$`Number of children` <- as.factor(processed_df$`Number of children`)
# Factors associated with better knowledge of the uses of antibiotics
model1 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, family = binomial)
summary(model1)
tbl_regression(model1, exponentiate = TRUE)
# Factors associated with better knowledge of the uses of antibiotics
model1 <- glm(Knowledge_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, binomial(link = "logit"))
tbl_regression(model1, exponentiate = TRUE)
tbl_regression(model1,
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2))
tbl_regression(model1,
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
bold_p() %>%
bold_labels() %>%
italicize_labels() %>%
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
model2 <- glm(Attitude_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, binomial(link = "logit"))
tbl_regression(model2,
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
bold_p() %>%
bold_labels() %>%
italicize_labels() %>%
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
# Factors associated with good practices of the uses of antibiotics
model3 <- glm(Practice_Level ~ `Parent’s age (years)`+`Parent’s sex`+`Parent’s education level`+`Employment status`+
`Family type`+`Your average household income per month (BDT)`+`Number of children`,
data = processed_df, binomial(link = "logit"))
tbl_regression(model3,
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
bold_p() %>%
bold_labels() %>%
italicize_labels() %>%
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
library(tidyverse)
library(likert)
library(ggpubr)
library(ggthemes)
ds <- readxl::read_excel("data/AMR_KAP_No_Code.xlsx")
# Visualize knowledge response
knowledge_df <- ds %>%
select(12:23) %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
# Plot in likert scale
p1 <- plot(likert(knowledge_df), ordered = F)
p1 + theme_pubr()
# Plot in likert scale
likert(knowledge_df)
plot(knowledge_df, ordered=FALSE, group.order=names(knowledge_df))
knowledge_df
# Plot in likert scale
plot(likert(knowledge_df), ordered = F)
# Plot in likert scale
likert(knowledge_df)
plot(knowledge_df, ordered=FALSE)
# Plot in likert scale
plot(likert(knowledge_df), ordered = F)
# Plot in likert scale
plot(likert(knowledge_df), group.order = names(knowledge_df))
# Plot in likert scale
plot(likert(knowledge_df), ordered = FALSE, group.order = names(knowledge_df))
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
wrap = 30)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
wrap = 20)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1.5)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1.5,
plot.percents = TRUE)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1.5,
plot.percents=TRUE,
plot.percent.low=FALSE,
plot.percent.high=FALSE)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1.5)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 1)
# Plot in likert scale
plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 2)
p1 + theme_bw()
p1 + theme_pubr()
# Plot in likert scale
p1 <- plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 2,
colors=c('orange','darkorange','darkblue'))
p1 + theme_pubr()
p1 <- plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 2,
colors=c('orange','darkorange','darkblue'),
include.histogram=TRUE)
# Plot in likert scale
p1 <- plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 2,
colors=c('orange','darkorange','darkblue'))
p1 + theme_pubr()
library(tidyverse)
library(likert)
library(ggpubr)
library(ggthemes)
ds <- readxl::read_excel("data/AMR_KAP_No_Code.xlsx")
# Visualize knowledge response
knowledge_df <- ds %>%
select(12:23) %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
# Plot in likert scale
p1 <- plot(likert(knowledge_df),
ordered = FALSE,
group.order = names(knowledge_df),
center = 2,
colors=c('orange','darkorange','darkblue'))
p1 + theme_pubr()
# Visualize attitude response
attitude_df <- ds %>%
select(24:33) %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
# Plot in likert scale
p2 <- plot(likert(attitude_df), ordered = F, wrap= 60)
p2+ theme_pubr()
# Visualize attitude response
attitude_df <- ds %>%
select(24:33) %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
# Plot in likert scale
p2 <- plot(likert(attitude_df), ordered = F, wrap= 60)
p2+ theme_pubr()
